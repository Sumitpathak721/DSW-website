<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DSW-Events</title>
</head>
<style>
    .event{
        display: inline-block;
        width:300px;
        height:300px;
        box-shadow: 1px 1px 5px 2px rgb(157, 94, 187);
        border-radius: 10px;
        padding:5px;
        margin:5px;
    }
    .event:hover{
        box-shadow: 1px 1px 10px 2px rgb(157, 94, 187);
    }
    .event img{
        width:100%;
        height:60%;
    }
    .event-detail{
        text-align: center;
    }
    .event-detail a{
        border:0px;
        background-color:rgb(150, 94, 202);
        color:white;
        padding:5px 10px;
        border-radius: 5px;
        box-shadow: 1px 1px 2px 2px rgb(150, 94, 202);
        font-size: 20px;
        text-decoration: none;
    }
    .event-detail a:hover{
        background-color:rgb(131, 75, 184);
    }
/* new decoration */

    body {
        font-size: 25px;
        color: white;
        text-align: center;
      }
      
      * { color:rebeccapurple; text-decoration: none;}
</style>
<body>
    <h1>
        <a href="" class="typewrite" data-period="2000" data-type='[ "Organised Events"]'>
          <span class="wrap"></span>
        </a>
    </h1>
    <div class="container">
        
        <%for(let i=0;i<events.length;i++){%>
            <div class="event" id="<%=events[i].Name%>">
                <img src="<%=events[i].icon%>" alt="<%=events[i].Name%>">
                <div class="event-detail">
                    <h3><%=events[i].Name%></h3>
                    <a href="/events/<%=events[i].Name%>">View More</a>
                </div>
            </div>
        <%}%>
    </div>
</body>
<script>
    var TxtType = function(el, toRotate, period) {
        this.toRotate = toRotate;
        this.el = el;
        this.loopNum = 0;
        this.period = parseInt(period, 10) || 2000;
        this.txt = '';
        this.tick();
        this.isDeleting = false;
    };

    TxtType.prototype.tick = function() {
        var i = this.loopNum % this.toRotate.length;
        var fullTxt = this.toRotate[i];

        if (this.isDeleting) {
        this.txt = fullTxt.substring(0, this.txt.length - 1);
        } else {
        this.txt = fullTxt.substring(0, this.txt.length + 1);
        }

        this.el.innerHTML = '<span class="wrap">'+this.txt+'</span>';

        var that = this;
        var delta = 200 - Math.random() * 100;

        if (this.isDeleting) { delta /= 2; }

        if (!this.isDeleting && this.txt === fullTxt) {
        delta = this.period;
        this.isDeleting = true;
        } else if (this.isDeleting && this.txt === '') {
        this.isDeleting = false;
        this.loopNum++;
        delta = 500;
        }

        setTimeout(function() {
        that.tick();
        }, delta);
    };

    window.onload = function() {
        var elements = document.getElementsByClassName('typewrite');
        for (var i=0; i<elements.length; i++) {
            var toRotate = elements[i].getAttribute('data-type');
            var period = elements[i].getAttribute('data-period');
            if (toRotate) {
              new TxtType(elements[i], JSON.parse(toRotate), period);
            }
        }
        // INJECT CSS
        var css = document.createElement("style");
        css.type = "text/css";
        css.innerHTML = ".typewrite > .wrap { border-right: 0.08em solid #fff}";
        document.body.appendChild(css);
    };
</script>
</html>